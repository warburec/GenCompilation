# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  check:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    outputs:
      status: ${{ steps.changes.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v4

      - name: Determine changed files
        id: changes
        uses: tj-actions/changed-files@v34
        with:
          files: |
            src/**
            test/**
            .github/workflows/**
            build.gradle

  build-and-test:
    needs: check
    if: needs.check.outputs.status == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
      - name: Grant execute permission to Gradle wrapper
        run: chmod +x ./gradlew

      - name: Build (without tests)
        run: ./gradlew build -x test

      - name: Run tests
        run: ./gradlew test

      - name: Publish Test Report
        if: success() || failure()
        uses: mikepenz/action-junit-report@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '**/build/test-results/test/TEST-*.xml'

#  dependency-submission:
#    needs: check
#    if: needs.check.outputs.status == 'true'
#    runs-on: ubuntu-latest
#    permissions:
#      contents: write
#
#    steps:
#      - uses: actions/checkout@v4
#      - name: Set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
#      # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
#      - name: Generate and submit dependency graph
#        uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
